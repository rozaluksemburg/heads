use leptos::*;
mod app;

fn main() {
    mount_to_body(|cx| view! { cx, <app::App/> })
}

/*
подробнее:

mount_to_body(|cx| view! { cx, <app::App/> }):

Это не совсем замыкание, а вызов функции mount_to_body с аргументом в виде
замыкания.
Замыкание здесь - это |cx| view! { cx, <app::App/> }.


|cx| view! { cx, <app::App/> }:

Это замыкание, которое принимает один аргумент cx (контекст Leptos).
view! - это макрос Leptos для создания представления (view).
<app::App/> - это не трейт, а компонент App из модуля app.


Leptos использует этот паттерн для создания и монтирования корневого компонента приложения:

mount_to_body монтирует ваше приложение в <body> HTML-документа.
Замыкание, переданное в mount_to_body, определяет, что именно будет отрендерено.


cx - это контекст Leptos, который используется для управления реактивностью
и жизненным циклом компонентов.
Весь этот код говорит: "Смонтировать в теле документа приложение,
корневым компонентом которого является App из модуля app".

Так что ваша интуиция верна - это действительно ключевой момент,
где определяется структура вашего приложения на верхнем уровне.
Leptos использует этот подход для инициализации и рендеринга вашего приложения.
 */